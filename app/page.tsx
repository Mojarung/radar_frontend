"use client";

import { useState, useEffect } from "react";
import { analyzeNews } from "@/lib/api";
import { AnalysisResponse } from "@/lib/types";
import { NewsCard } from "@/components/news-card";
import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { RefreshCcw, Loader2 } from "lucide-react";

export default function Home() {
  const [data, setData] = useState<AnalysisResponse | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [timeWindow, setTimeWindow] = useState<number>(720);
  const [topK, setTopK] = useState<number>(10);

  const fetchNews = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await analyzeNews({
        time_window_hours: timeWindow,
        top_k: topK,
      });
      setData(response);
    } catch (err) {
      setError(err instanceof Error ? err.message : "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchNews();
  }, []);

  return (
    <div className="min-h-screen bg-background cyber-grid flex flex-col">
      {/* Header */}
      <header className="border-b border-primary/30 bg-card/50 backdrop-blur-sm sticky top-0 z-10">
        <div className="container mx-auto px-4 py-6">
          <h1 className="text-4xl font-bold text-primary text-glow-pink mb-2">
            MOJARUNG RADAR
          </h1>
          <p className="text-muted-foreground">
            –°–∏—Å—Ç–µ–º–∞ –≤—ã—è–≤–ª–µ–Ω–∏—è –∏ –æ—Ü–µ–Ω–∫–∏ –≥–æ—Ä—è—á–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö
          </p>
        </div>
      </header>

      {/* Main Content */}
      <div className="flex-1 container mx-auto px-4 py-6">
        <div className="bg-card/95 backdrop-blur-xl rounded-lg p-6 border border-primary/40 mb-6 shadow-lg">
          <div className="flex flex-wrap gap-4 items-end">
            <div className="flex-1 min-w-[200px]">
              <label className="block text-sm font-medium mb-2 text-foreground">
                –í—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥
              </label>
              <Select
                value={timeWindow.toString()}
                onValueChange={(value) => setTimeWindow(Number(value))}
              >
                <SelectTrigger className="border-primary/50">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="1">–ü–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å</SelectItem>
                  <SelectItem value="3">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —á–∞—Å–∞</SelectItem>
                  <SelectItem value="6">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 6 —á–∞—Å–æ–≤</SelectItem>
                  <SelectItem value="12">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 12 —á–∞—Å–æ–≤</SelectItem>
                  <SelectItem value="24">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞</SelectItem>
                  <SelectItem value="48">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è</SelectItem>
                  <SelectItem value="72">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è</SelectItem>
                  <SelectItem value="168">–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–µ–¥–µ–ª—è</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="flex-1 min-w-[200px]">
              <label className="block text-sm font-medium mb-2 text-foreground">
                –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π
              </label>
              <Select
                value={topK.toString()}
                onValueChange={(value) => setTopK(Number(value))}
              >
                <SelectTrigger className="border-primary/50">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="5">–¢–æ–ø 5</SelectItem>
                  <SelectItem value="10">–¢–æ–ø 10</SelectItem>
                  <SelectItem value="15">–¢–æ–ø 15</SelectItem>
                  <SelectItem value="20">–¢–æ–ø 20</SelectItem>
                  <SelectItem value="30">–¢–æ–ø 30</SelectItem>
                  <SelectItem value="50">–¢–æ–ø 50</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <Button
              onClick={fetchNews}
              disabled={loading}
              className="bg-primary hover:bg-primary/80 glow-pink"
            >
              {loading ? (
                <>
                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                  –ó–∞–≥—Ä—É–∑–∫–∞...
                </>
              ) : (
                <>
                  <RefreshCcw className="mr-2 h-4 w-4" />
                  –û–±–Ω–æ–≤–∏—Ç—å
                </>
              )}
            </Button>
          </div>

          {/* Stats */}
          {data && (
            <div className="flex flex-wrap gap-4 mt-4 pt-4 border-t border-primary/30">
              <Badge variant="secondary" className="text-sm px-3 py-1">
                üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: {data.total_articles_analyzed}
              </Badge>
              <Badge variant="secondary" className="text-sm px-3 py-1">
                üì∞ –ù–∞–π–¥–µ–Ω–æ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤: {data.total_clusters}
              </Badge>
              <Badge variant="secondary" className="text-sm px-3 py-1">
                üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date(data.analysis_timestamp).toLocaleString('ru-RU')}
              </Badge>
            </div>
          )}
        </div>

        {/* Error */}
        {error && (
          <div className="bg-destructive/10 border border-destructive rounded-lg p-4 mb-6">
            <p className="text-destructive font-medium">‚ö†Ô∏è {error}</p>
          </div>
        )}

        {/* Loading State */}
        {loading && (
          <div className="flex items-center justify-center py-20">
            <div className="text-center">
              <Loader2 className="h-12 w-12 animate-spin text-primary mx-auto mb-4" />
              <p className="text-muted-foreground">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏...</p>
            </div>
          </div>
        )}

        {/* News Grid */}
        {!loading && data && data.results.length > 0 && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {data.results.map((news) => (
              <NewsCard key={news.dedup_group} news={news} />
            ))}
          </div>
        )}

        {/* Empty State */}
        {!loading && data && data.results.length === 0 && (
          <div className="text-center py-20">
            <div className="text-6xl mb-4">üì≠</div>
            <h3 className="text-xl font-bold mb-2">–ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
            <p className="text-muted-foreground">
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞
            </p>
          </div>
        )}
      </div>

      {/* Footer */}
      <footer className="border-t border-primary/30 bg-card/80 backdrop-blur-sm mt-auto">
        <div className="container mx-auto px-4 py-6 text-center text-muted-foreground text-sm">
          <p>MOJARUNG RADAR ¬© 2025 | –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π</p>
        </div>
      </footer>
    </div>
  );
}
