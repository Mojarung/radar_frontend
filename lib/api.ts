import { AnalysisRequest, AnalysisResponse } from './types';
import { MOCK_DATA } from './mock-data';

// üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤ false –∫–æ–≥–¥–∞ –±—ç–∫ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
const USE_MOCK = false;

const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';

export async function analyzeNews(params: AnalysisRequest): Promise<AnalysisResponse> {
  // üîß MOCK MODE - –ø—Ä–æ—Å—Ç–æ –∏–∑–º–µ–Ω–∏—Ç–µ USE_MOCK –Ω–∞ false —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API
  if (USE_MOCK) {
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 800));
    return MOCK_DATA;
  }

  const response = await fetch(`${API_BASE_URL}/api/v1/analyze`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(params),
  });

  if (!response.ok) {
    throw new Error(`API error: ${response.status}`);
  }

  return response.json();
}

